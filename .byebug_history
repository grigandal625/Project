c
cc
self
free_sort_objects_dedicated_groups_count
c
exception
n
 params[:data]
 params[:data
c
params[:data]
n
c
params[:data]
params
c
params
c
params
c
params
c
n
c
params
c
(1..8).to_a
(1..8)
1..8
c
result
time_duration
n
time_duration
n
c
params[:answers].values
params[:answers].valuesc
c
params[:answers].valuesc
params[:answers].values
params[:answers]
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params[:method]
params[:action]
params
c
с
@psyho_data.sort_by{|k, v| -v}с
@psyho_data.sort_by{|k, v| -v}
@psyho_data.sort_by{|k, v| v}
@psyho_data
c
marks_psyhotype
c
row[-7]
row[-7].nil?
psyhotype.in?(marks_psyhotype.keys)
psyhotype
marks_psyhotype[psyhotype]
c
marks_psyhotype[psyhotype]
c
marks_psyhotype[psyhotype]
c
n
student
row[-7].to_i
marks_psyhotype[psyhotype]
psyhotype
c
n
result
marks
marks.keys
marks_psyhotype
c
a.class.nan?
a.nan? 
a.class.nan?
a.class.nil?
a.class.blank?
a.class
a
a=p[:sum_score] / p[:sum_weight] * 100 
p[:sum_score] / p[:sum_weight] * 100 rescue 0
p[:sum_score] / p[:sum_weight] * 100 || 0
p[:sum_score] / p[:sum_weight] * 100
p
action_id
c
list_utz.uniq
n
c
list_utz
list_utz.uniq
n
utz_distribution[personality_types.first][personality_modality]
personality_modality
n
get_student_personality_type(extra_introversion_score, emotional_excitability_score)
personality_types
c
utz_list
list_utz
tutor_actions_priorities
c
personality_modality
get_student_personality_type(extra_introversion_score, emotional_excitability_score)
emotional_excitability_score
extra_introversion_score
c
tutor_actions_priorities
c
get_utz_list(student)
utz_list
c
tutor_actions_students
n
c
personality_types
n
c
utz_distribution[personality_types.first][personality_modality]
utz_distribution[personality_type][personality_modality]
n
personality_types
n
extra_introversion_score.between?(14.1, 26.0) && emotional_excitability_score.between?(0.0, 10.0)
n
extra_introversion_score
c
student
student['tests']
c
pa_count
n
pa_count
n
pa
student
n
s
n
student
n
student
c
student
c
student
c
с
c
a.find{|el| el['text'] == 'ПК-588'}
a.find{|el| el['text'] == 'ПК-5'}
a = [{"competence_id"=>1, "text"=>"ПК-2", "mark"=>0.7322580645161291}, {"competence_id"=>2, "text"=>"ПК-8", "mark"=>0.73}, {"competence_id"=>3, "text"=>"ПК-5", "mark"=>0.76}, {"competence_id"=>4, "text"=>"ОПК-3", "mark"=>0.7047619047619048}, {"competence_id"=>5, "text"=>"ОПСК-1", "mark"=>0.79}]
c
pa.delete_at(0)
student
pa
c
pa
c
@max_year
c
student
studet
student['tests'][-2]['year'] == student['tests'][-1]['year']
c
student['tests'][-2]['year'] == student['tests'][-1]['year']
c
student['tests'][-2]['year'] == student['tests'][-1]['year']
c
n
student['tests'][-2]['year'] == student['tests'][-1]['year']
c
student['tests'][-2]['year'] == student['tests'][-1]['year']
c
student['tests'][-2]['year'] == student['tests'][-1]['year']
c
student['tests'][-2]['year'] == student['tests'][-1]['year']
c
student['tests'][-2]['year'] == student['tests'][-1]['year']
c
student['tests'][-2]['year'] == student['tests'][-1]['year']
c
student['tests'][-2]['year'] == student['tests'][-1]['year']
c
student['tests'][-2]['year'] == student['tests'][-1]['year']
n
student['tests'][-2]['year'] == student['tests'][-1]['year']
student['tests'][-2]['year']
student['tests'][-2]
student['tests']
student
continue
c
tutor_actions.prepend 'j'
tutor_actions
n
tutor_actions
c
tutor_actions_priorities
c
get_utz_list(student)
utz_list
has_topic_component
tutor_actions_priorities
student
c
tutor_actions_priorities
student
c
student
tutor_actions_priorities
c
has_topic_component
c
tc.weight
t * tc.weight
action_id
tutor_actions_priorities
n
has_topic_component
n
c
get_utz_list(student)
student
utz_list
has_topic_component
n
personality
n
c
topic_marks.each { |id, t| puts t}
topic_marks.each { |id, t| puts id}
topic_marks.each { |id, t| puts id
tutor_actions_priorities
topic_marks
              topic_components = TopicComponent.where(ka_topic_id: id)
